//---------------------------------------------------------------------------

#ifndef KarisanStreamerConfigH
#define KarisanStreamerConfigH
//---------------------------------------------------------------------------
#include <string>
#include <memory>
#include <map>
#include <classes.hpp>

#include "StreamConfig.h"

using namespace std ;

class StreamNames : public TStringList
{
	public:
		StreamNames() { ::TStringList() ; StrictDelimiter = true ; }
		virtual __fastcall ~StreamNames() { }
};


class KarisanStreamerConfig
{
	public:
		KarisanStreamerConfig() ;
		~KarisanStreamerConfig() ;

		bool save() ;
		bool load() ;
		bool saveStreams() ;
		bool loadStreams() ;
		void addStream(StreamConfig *) ;
		bool getStream(int, StreamConfig *) ;
		bool getStream(string, StreamConfig *) ;
		bool deleteStream(StreamConfig *) ;
		bool deleteStream(int) ;
		map<int, StreamConfig *>* getStreams() ;
		void update() ;

	private:
		int getNumStreams() ;
		void saveStream(StreamConfig *) ;
		void loadStream(StreamConfig *) ;
		bool loadConfig() ;
		void getStreamNames(StreamNames *streams) ;
		void setStreamNames(StreamNames *streams) ;
		void destroy() ;

		UnicodeString DEFAULT_CONFIG_NAME ;
		UnicodeString CONFIG_FILENAME ;
		map<int, StreamConfig *> *_allstreams ;
		auto_ptr<TIniFile> _config_file ;

};


#endif
